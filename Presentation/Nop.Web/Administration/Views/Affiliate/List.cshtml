@model AffiliateListModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Affiliates").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Affiliates");
}
@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
<div class="content-header clearfix">
    <h1 class="pull-left">
        @T("Admin.Affiliates")
    </h1>
    <div class="pull-right">
        @*<a href="@Url.Action("Create")" class="btn bg-blue">
            <i class="fa fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>*@
        <div class="btn-group">           
            <button type="button" class="btn btn-success">
                <i class="fa fa-download"></i>
                @T("Admin.Common.ExportToExcel")
            </button>
            <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                <span class="caret"></span>
                <span class="sr-only">&nbsp;</span>
            </button>
            <ul class="dropdown-menu" role="menu">               
                <li>
                    <button type="submit" name="exportexcel-all">
                        <i class="fa fa-file-excel-o"></i>
                        @T("Admin.Common.ExportToExcel.All")
                    </button>
                </li>
                <li>
                    <button type="button" id="exportexcel-selected">
                        <i class="fa fa-file-excel-o"></i>
                        @T("Admin.Common.ExportToExcel.Selected")
                    </button>
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="content">
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default panel-search">
                <div class="panel-body">
                    <p>
                        @T("Admin.Affiliates.Description")
                    </p>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.SearchFirstName)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.SearchFirstName)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.SearchEmail)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.SearchEmail)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.SearchLectureId)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.SearchLectureId)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.OnlyConfirmed)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.OnlyConfirmed)
                                </div>
                            </div>
                            <div class="form-group" id="pnlOrdersCreatedFromUtc">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.CreatedFromUtc)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.CreatedFromUtc)
                                </div>
                            </div>
                            <div class="form-group" id="pnlOrdersCreatedToUtc">
                                <div class="col-md-4">
                                    @Html.NopLabelFor(model => model.CreatedToUtc)
                                </div>
                                <div class="col-md-8">
                                    @Html.NopEditorFor(model => model.CreatedToUtc)
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4">
                                    <button type="button" id="search-affiliates" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="affiliates-grid"></div>

                    <script>
                        $(document).ready(function() {
                            $("#affiliates-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("AffiliateList", "Affiliate"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: additionalData
                                        },
                                        update: {
                                            url: "@Html.Raw(Url.Action("AffiliateUpdate", "Affiliate"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        },
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("AffiliateDelete", "Affiliate"))",
                                            type: "POST",
                                            dataType: "json",
                                            data: addAntiForgeryToken
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                            id: "Id",
                                            fields: { 
                                                Id: { editable: false, type: "int" },
                                                Name: { editable: true, type: "string" },
                                                Phone: { editable: true, type: "string" },
                                                Email: { editable: true, type: "string" },
                                                Church: { editable: true, type: "string" },
                                                Active: { editable: true, type: "boolean" },
                                                Deleted: { editable: true, type: "boolean" },
                                                CreatedOn: { editable: false, type: "date" }
                                            }
                                        }
                                    },
                                    requestEnd: function(e) {
                                        if (e.type == "update") {
                                            this.read();
                                        }
                                    },
                                    error: function(e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },
                                pageable: {
                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)]
                                },
                                editable: {
                                    confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [{
                                    field: "Id",
                                    headerTemplate: "<input id='mastercheckbox' type='checkbox'/>",
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: "<input type='checkbox' value='#=Id#' class='checkboxGroups'/>",
                                    width: 50
                                }, {
                                    field: "Name",
                                    title: "@T("Admin.Address.Fields.FirstName")",
                                    width: 200
                                }, {
                                    field: "Phone",
                                    title: "@T("Admin.Address.Fields.PhoneNumber")",
                                    width: 150
                                 }, {
                                     field: "Email",
                                    title: "@T("Admin.Address.Fields.Email")",
                                    width: 200
                                 }, {
                                     field: "Church",
                                    title: "@T("Admin.Affiliates.Address.Fields.Company")",
                                    width: 200
                                 },{
                                     field: "CreatedOn",
                                     title: "@T("Admin.Affiliates.Address.CreatedOnUtc")",
                                     type: "date",
                                     width: 100,
                                    format: "{0:G}"
                                }, {
                                    field: "Deleted",
                                    title: "@T("Admin.Affiliates.Fields.Deleted")",
                                    width: 150,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '# if(Deleted) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                }, {
                                    field: "Active",
                                    title: "@T("Admin.Affiliates.Fields.Active")",
                                    width: 100,
                                    headerAttributes: { style: "text-align:center" },
                                    attributes: { style: "text-align:center" },
                                    template: '# if(Active) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                                }, {
                                    field: "Id",
                                    title: "@T("Admin.Common.View")",
                                    width: 100,
                                    template: '<a href="View/#=Id#" onclick="javascript:OpenWindow(\'View/#=Id#\', 800, 600, true); return false;" >@T("Admin.Common.View")</a>'
                                }, {
                                    command: [
                                        {
                                            name: "edit",
                                            text: {
                                                edit: "@T("Admin.Common.Edit")",
                                                update: "@T("Admin.Common.Update")",
                                                cancel: "@T("Admin.Common.Cancel")"
                                            }
                                        }, {
                                            name: "destroy",
                                            text: "@T("Admin.Common.Delete")"
                                        }
                                        ],
                                    width: 150
                                }
                                ]
                            });
                        });
                    </script>

                    <script type="text/javascript">
                        var selectedIds = [];
                        $(document).ready(function() {

                            $('#search-affiliates').click(function() {
                                var grid = $('#affiliates-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                //grid.dataSource.read(); we already loaded the grid above using "page" function
                                $('.checkboxGroups').attr('checked', false).change();
                                selectedIds = [];
                                return false;
                            });

                            $("".concat("#@Html.FieldIdFor(model => model.SearchFirstName),",
                            "#@Html.FieldIdFor(model => model.SearchEmail),",
                            "#@Html.FieldIdFor(model => model.SearchLectureId)")).keydown(function(event) {
                                if (event.keyCode === 13) {
                                    $("#search-affiliates").click();
                                    return false;
                                }
                            });

                            $('#mastercheckbox').click(function () {
                                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                            });


                            //wire up checkboxes.
                            $('#affiliates-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                                var $check = $(this);
                                if ($check.is(":checked") == true) {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked == -1) {
                                        //add id to selectedIds.
                                        selectedIds.push($check.val());
                                    }
                                }
                                else {
                                    var checked = jQuery.inArray($check.val(), selectedIds);
                                    if (checked > -1) {
                                        //remove id from selectedIds.
                                        selectedIds = $.grep(selectedIds, function (item, index) {
                                            return item != $check.val();
                                        });
                                    }
                                }
                                updateMasterCheckbox();
                            });
                        });

                        function updateMasterCheckbox() {
                            var numChkBoxes = $('#affiliates-grid input[type=checkbox][id!=mastercheckbox]').length;
                            var numChkBoxesChecked = $('#affiliates-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                            $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                        }

                        function additionalData() {
                            var data = {
                                SearchFirstName: $('#@Html.FieldIdFor(model => model.SearchFirstName)').val(),
                                SearchEmail: $('#@Html.FieldIdFor(model => model.SearchEmail)').val(),
                                SearchLectureId:$('#@Html.FieldIdFor(model => model.SearchLectureId)').val(),
                                OnlyConfirmed: $('#@Html.FieldIdFor(model => model.OnlyConfirmed)').is(':checked'),
                                CreatedFromUtc: $('#@Html.FieldIdFor(model => model.CreatedFromUtc)').val(),
                                CreatedToUtc: $('#@Html.FieldIdFor(model => model.CreatedToUtc)').val()
                            };
                            addAntiForgeryToken(data);
                            return data;
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</div>
}

@*export selected (Excel). We don't use GET approach because it's limited to 2K-4K chars and won't work for large number of entities*@
@using (Html.BeginForm("ExportExcelSelected", "Affiliate", FormMethod.Post, new { id = "export-excel-selected-form" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" id="selectedIds" name="selectedIds" value="" />
}

<script type="text/javascript">
    $(document).ready(function () {
        $('#exportexcel-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#export-excel-selected-form #selectedIds').val(ids);
            $('#export-excel-selected-form').submit();
            return false;
        });
    });
</script>